# Copyright (C) 2009-2012 Splunk Inc. All Rights Reserved.
# DO NOT EDIT THIS FILE!
# Please make all changes to files in $SPLUNK_HOME/etc/apps/TA-nix/local.
# To make changes, copy the section/stanza you want to change from $SPLUNK_HOME/etc/apps/TA-nix/default
# into ../local and edit there.
#

#####################
## Configuration Logs
#####################
[source::(....(config|conf|cfg|inii|cfg|emacs|ini|license|lng|plist|presets|properties|props|vim|wsdl))]
sourcetype = config_file
CHECK_METHOD = modtime

[config_file]
LINE_BREAKER = ^()$
TRUNCATE = 1000000
SHOULD_LINEMERGE = false
DATETIME_CONFIG = NONE
CHECK_METHOD = modtime
KV_MODE = none
pulldown_type = true
SEGMENTATION-all      = whitespace-only
SEGMENTATION-inner    = whitespace-only
SEGMENTATION-outer    = whitespace-only
SEGMENTATION-standard = whitespace-only
LEARN_MODEL = false


#####################
## DHCP
#####################
[source::....dhcpd]
sourcetype = dhcpd

[dhcpd]
SHOULD_LINEMERGE = false
REPORT-0dest_x_for_dhcpd = dest_kv_for_dhcpd_ack, dest_kv_for_dhcpd_ack2, dest_kv_for_dhcpd_discover, dest_kv_for_dhcpd_inform, dest_kv_for_dhcpd_nak, dest_kv_for_dhcpd_offer, dest_kv_for_dhcpd_request
REPORT-dest_for_dhcpd = dest_nt_host_as_dest,dest_mac_as_dest,dest_ip_as_dest
REPORT-dvc_for_dhcpd = dvc_for_dhcpd
REPORT-signature_for_dhcpd = signature_for_dhcpd


#####################
## Endpoint Changes
#####################
[source::....fs_notification]
sourcetype = fs_notification

## fs_notification endpoint changes
[fs_notification]
## Required fields: action,dest,object,object_category,object_path,status,user
## Optional fields: object_id,object_attrs,user_type,msg,data,severity
REPORT-object_object_path_for_fs_notification = object_object_path_for_fs_notification
REPORT-vendor_object_category_for_fs_notification = vendor_object_category_for_fs_notification

FIELDALIAS-vendor_action_for_fs_notification = action as vendor_action
FIELDALIAS-dest_for_fs_notification = host as dest
FIELDALIAS-user_for_fs_notification = uid as user
FIELDALIAS-object_attrs_for_fs_notification = chgs as object_attrs

# Legacy change_type lookup to support ES 2.0.2
LOOKUP-change_type_for_fs_notification = fs_notification_change_type_lookup sourcetype OUTPUTNEW change_type
LOOKUP-action_for_fs_notification = endpoint_change_vendor_action_lookup vendor_action OUTPUT action
LOOKUP-object_category_for_fs_notification = endpoint_change_object_category_lookup object as vendor_object_category OUTPUT object_category
# Any fs_notification event indicates a successful change; vendor_status in the lookup is overloaded to accommodate this.
LOOKUP-object_status_for_fs_notification = endpoint_change_status_lookup vendor_status as sourcetype OUTPUTNEW status


#####################
## Scripted Inputs
#####################
[cpu]
SHOULD_LINEMERGE=false
LINE_BREAKER=(^$|[\r\n]+[\r\n]+)
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE = multi
FIELDALIAS-dest_for_cpu = host as dest
FIELDALIAS-src_for_cpu = host as src
FIELDALIAS-cpu_for_cpu = CPU as cpu
FIELDALIAS-idle_time_for_cpu = pctIdle AS PercentIdleTime
FIELDALIAS-nice_time_for_cpu = pctNice AS PercentNiceTime
FIELDALIAS-cpu_load_percent_for_cpu = pctSystem AS PercentSystemTime,pctSystem as cpu_load_percent
FIELDALIAS-cpu_user_percent_for_cpu = pctUser AS PercentUserTime,pctUser as cpu_user_percent
FIELDALIAS-wait_time_for_cpu = pctIowait AS PercentWaitTime

[df]
SHOULD_LINEMERGE=false
LINE_BREAKER=(^$|[\r\n]+[\r\n]+)
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE = multi
FIELDALIAS-dest_for_df = host as dest
FIELDALIAS-src_for_df = host as src
FIELDALIAS-filesystem_for_df = Filesystem AS filesystem
FIELDALIAS-filesystem_type_for_df = Type as filesystem_type
FIELDALIAS-mount_for_df = MountedOn AS mount


EVAL-storage = coalesce( if(match(Size, "T$"), tonumber(rtrim(Size, "T"),10)*1099511627776.0, null()), if(match(Size, "G$"), tonumber(rtrim(Size,"G"),10)*1073741824.0, null()), if(match(Size, "M$"), tonumber(rtrim(Size,"M"), 10)*1048576.0, null()), if(match(Size, "K$"), tonumber(rtrim(Size,"K"), 10)*1024.0, null()), tonumber(Size,  10)*1024.0,  "unknown")
EVAL-storage_free = coalesce( if(match(Avail, "T$"), tonumber(rtrim(Avail, "T"),10)*1099511627776.0, null()), if(match(Avail, "G$"), tonumber(rtrim(Avail,"G"),10)*1073741824.0, null()), if(match(Avail, "M$"), tonumber(rtrim(Avail,"M"), 10)*1048576.0, null()), if(match(Avail, "K$"), tonumber(rtrim(Avail,"K"), 10)*1024.0, null()), tonumber(Avail, 10)*1024.0, "unknown")
# Redundancy required here because calculated fields are not evaluated in sequence.
EVAL-storage_free_percent = 100.0-tonumber(rtrim(UsePct,"%%"),10)
EVAL-storage_used = coalesce( if(match(Used, "T$"), tonumber(rtrim(Used, "T"),10)*1099511627776.0, null()), if(match(Used, "G$"), tonumber(rtrim(Used,"G"),10)*1073741824.0, null()), if(match(Used, "M$"), tonumber(rtrim(Used,"M"), 10)*1048576.0, null()), if(match(Used, "K$"), tonumber(rtrim(Used,"K"), 10)*1024.0, null()), tonumber(Used,  10)*1024.0,  "unknown")
EVAL-storage_used_percent = tonumber(rtrim(UsePct,"%%"),10)

## Legacy fields

# Note we don't elimininate one layer of indirection here by
# eliminating the redundant FIELDALIAS from FreeMegabytes -> FreeMBytes, etc.
# which was previously used.
EVAL-FreeMBytes = coalesce( if(match(Avail, "T$"), tonumber(rtrim(Avail, "T"),10)*1048756.0, null()), if(match(Avail, "G$"), tonumber(rtrim(Avail,"G"),10)*1024.0, null()), if(match(Avail, "M$"), tonumber(rtrim(Avail,"M"), 10), null()), if(match(Avail, "K$"), tonumber(rtrim(Avail,"K"), 10)/1024.0, null()), tonumber(Avail, 10)/1024.0, "unknown")
EVAL-TotalMBytes = coalesce( if(match(Size, "T$"), tonumber(rtrim(Size, "T"),10)*1048756.0, null()), if(match(Size, "G$"), tonumber(rtrim(Size,"G"),10)*1024.0, null()), if(match(Size, "M$"), tonumber(rtrim(Size,"M"), 10), null()), if(match(Size, "K$"), tonumber(rtrim(Size,"K"), 10)/1024.0, null()), tonumber(Size,  10)/1024.0,  "unknown")
EVAL-UsedMBytes = coalesce( if(match(Used, "T$"), tonumber(rtrim(Used, "T"),10)*1048756.0, null()), if(match(Used, "G$"), tonumber(rtrim(Used,"G"),10)*1024.0, null()), if(match(Used, "M$"), tonumber(rtrim(Used,"M"), 10), null()), if(match(Used, "K$"), tonumber(rtrim(Used,"K"), 10)/1024.0, null()), tonumber(Used,  10)/1024.0,  "unknown")
EVAL-PercentUsedSpace = tonumber(rtrim(UsePct,"%%"),10)
# Redundancy required here because calculated fields are not evaluated in sequence.
EVAL-PercentFreeSpace = 100.0-tonumber(rtrim(UsePct,"%%"),10)

[hardware]
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
EXTRACT-RealMemoryMB = (?i)MEMORY_REAL\s+(?P<RealMemoryMB>[^ ]*)[ ]?
EXTRACT-SwapMemoryMB = (?i)MEMORY_SWAP\s+(?P<SwapMemoryMB>[^ ]*)[ ]?
EXTRACT-Unit = (?i)MEMORY_REAL\s+\d+\s+(?P<Unit>\w+)?

[interfaces]
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE=multi

[source::...(linux.diskio|sample.diskio.linux)]
sourcetype = iostat
HEADER_MODE = always
SHOULD_LINEMERGE = false

[iostat]
LINE_BREAKER = (^$|[\r\n]+[\r\n]+)
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE = multi

[lastlog]
## Override system/default lastlog sourcetype invalidation
invalid_cause =
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT

[lsof]
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE = multi

[netstat]
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT

[openPorts]
SHOULD_LINEMERGE=false
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
REPORT-fields_for_open_ports_sh = fields_for_open_ports_sh
FIELDALIAS-dest_port_for_open_ports_sh = Port AS dest_port
FIELDALIAS-dest_for_open_ports_sh = host AS dest
FIELDALIAS-transport_for_open_ports_sh = Proto AS transport

[package]
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT

[source::...protocol.sample]
sourcetype = protocol
HEADER_MODE = always
SHOULD_LINEMERGE = false

[protocol]
SHOULD_LINEMERGE=false
LINE_BREAKER=(^$|[\r\n]+[\r\n]+)
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE=multi

[source::...linux.ps]
sourcetype = ps
HEADER_MODE = always
SHOULD_LINEMERGE = false

[ps]
SHOULD_LINEMERGE=false
LINE_BREAKER=(^$|[\r\n]+[\r\n]+)
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE = multi

FIELDALIAS-cpu_load_percent_for_ps = pctCPU AS PercentProcessorTime,pctCPU as cpu_load_percent
FIELDALIAS-dest_for_ps = host as dest
## The "start" field in this data is never used so no extractions applied here.
FIELDALIAS-process_id_for_ps = PID AS pid,PID as process_id
FIELDALIAS-percentmemory_for_ps = pctMEM AS PercentMemory
FIELDALIAS-rss_for_ps = RSZ_KB AS rss
FIELDALIAS-src_for_ps = host as src
FIELDALIAS-vsz_for_ps = VSZ_KB AS vsz
FIELDALIAS-tty_for_ps = TTY AS tty
FIELDALIAS-stat_for_ps = S AS stat
FIELDALIAS-user_for_ps = USER AS user

# The "app" field is the conjunction of COMMAND plus ARGS
# Note that the UNIX app joins arguments with an underscore.
EVAL-app = if(ARGS!="<noArgs>", COMMAND." ".ARGS,COMMAND)
EVAL-process = if(ARGS!="<noArgs>", COMMAND." ".ARGS,COMMAND)

# Truncate needless leading zeroes from the cumulative CPU time field.
EVAL-cpu_time = replace(CPUTIME, "^00:[0]{0,1}", "")
EVAL-time = replace(CPUTIME, "^00:[0]{0,1}", "")

# UsedBytes is calculated as RSZ_KB*1024. Previously it was calculated using 
# %MEM and the "Mem:" header from "top -bn 1", which tended to underestimate
# compared to this value. This is a rough measure of resident set size (i.e.,
# physical memory in use).
EVAL-mem_used=RSZ_KB*1024
EVAL-UsedBytes=RSZ_KB*1024

[time]
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT

[source::...top.sample]
sourcetype = top
HEADER_MODE = always
SHOULD_LINEMERGE = false

[top]
SHOULD_LINEMERGE=false
LINE_BREAKER=(^$|[\r\n]+[\r\n]+)
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE=multi

[usersWithLoginPrivs]
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE=multi

[who]
SHOULD_LINEMERGE=false
LINE_BREAKER=^()$
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT
KV_MODE=multi

[source::...linux.vmstat]
sourcetype = vmstat
HEADER_MODE = always
SHOULD_LINEMERGE = false

[vmstat]
LINE_BREAKER=(^$|[\r\n]+[\r\n]+)
TRUNCATE=1000000
DATETIME_CONFIG = CURRENT

REPORT-0kv_for_vmstat = fields_for_vmstat_sh,vmstat_linux,vmstat_osx
FIELDALIAS-dest_for_vmstat = host as dest
EVAL-mem = if(isnotnull(memFreeMB) AND isnotnull(memUsedMB),(memFreeMB*1048576)+(memUsedMB*1048576),null())
EVAL-mem_free = if(isnotnull(memFreeMB),memFreeMB*1048576,null())
EVAL-mem_used = if(isnotnull(memUsedMB),memUsedMB*1048576,null())
FIELDALIAS-src_for_vmstat = host as src

## Legacy fields
FIELDALIAS-FreeMBytes = memFreeMB AS FreeMBytes
EVAL-UsedBytes = tonumber(memUsedMB, 10)*1048756
FIELDALIAS-UsedMBytes = memUsedMB AS UsedMBytes
FIELDALIAS-TotalMBytes = memTotalMB AS TotalMBytes


#####################
## BEGIN SCRIPTED INPUT CONTENT IMPORTED FROM TA-deployment-apps
#####################

# Stanzas in this section are legacy configuration stanzas
# intended to support parsing of data created by scripts in 
# TA-deploymentapps, which has since been retired. Systems that use
# Splunk_TA_nix on the search head but which may be searching data
# from forwarders on which the older scripts are still in use should 
# be able to search new and old data seamlessly.

###### Global ######
[source::...(linux.*|sample.*.linux)]
TRANSFORMS-force_host_for_linux_eventgen = force_host_for_linux_eventgen

[source::...(osx.*|sample.*.osx)]
TRANSFORMS-force_host_for_osx_eventgen = force_host_for_osx_eventgen

[source::...(solaris.*|sample.*.solaris)]
TRANSFORMS-force_host_for_solaris_eventgen = force_host_for_solaris_eventgen

[source::...sample.*.unix]
TRANSFORMS-force_host_for_unix_eventgen = force_host_for_unix_eventgen

[source::(AIX|FreeBSD|HPUX|Linux|OSX|Solaris|Unix):*]
FIELDALIAS-dest_for_scripted_inputs = host as dest
FIELDALIAS-src_for_scripted_inputs = host as src

###### CPUTime ######
[source::...sample.cputime.unix]
sourcetype = Unix:CPUTime
TRANSFORMS-force_source_for_unix_cputime = force_source_for_unix_cputime, force_host_for_linux_cpu

[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris):CPUTime]
TRANSFORMS-force_host_for_linux_cputime = force_host_for_linux_cpu
SHOULD_LINEMERGE = false
FIELDALIAS-dest_for_cputime = host as dest
FIELDALIAS-src_for_cputime = host as src
FIELDALIAS-cpu_for_cputime = CPU as cpu
FIELDALIAS-idle_time_for_cputime = pctIdle AS PercentIdleTime
FIELDALIAS-nice_time_for_cputime = pctNice AS PercentNiceTime
FIELDALIAS-cpu_load_percent_for_cputime = pctSystem AS PercentSystemTime,pctSystem as cpu_load_percent
FIELDALIAS-cpu_load_user_for_cputime = pctUser AS PercentUserTime,pctUser as cpu_user_percent
FIELDALIAS-wait_time_for_cputeim = pctIowait AS PercentWaitTime

###### Disk ######
[source::...linux.df]
sourcetype = df
HEADER_MODE = always

[source::...linux.cputime]
sourcetype = cpu
HEADER_MODE = always

[source::...sample.freediskspace.unix]
sourcetype = Unix:FreeDiskSpace
TRANSFORMS-force_source_for_unix_freediskspace = force_source_for_unix_freediskspace

[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris):FreeDiskSpace]
SHOULD_LINEMERGE = false

EVAL-storage = if(isnotnull(TotalMBytes),TotalMBytes*1048576,null())
EVAL-storage_free = if(isnotnull(FreeMegabytes),FreeMegabytes*1048576,null())
EVAL-storage_free_percent = if(isnotnull(FreeMegabytes) AND isnotnull(TotalMBytes),(FreeMegabytes*100)/TotalMBytes,null())
EVAL-storage_used = if(isnotnull(UsedMegabytes),UsedMegabytes*1048576,null())
EVAL-storage_used_percent = if(isnotnull(UsedMegabytes) AND isnotnull(TotalMBytes),(UsedMegabytes*100)/TotalMBytes,null())

## Legacy Fields
FIELDALIAS-FreeMBytes_for_freediskspace = FreeMegabytes as FreeMBytes
FIELDALIAS-TotalMBytes_for_freediskspace = TotalMegabytes as TotalMBytes
FIELDALIAS-UsedMBytes_for_freediskspace = UsedMegabytes as UsedMBytes

###### Listening Ports ######
[source::...(linux.listeningports|sample.listeningports.linux)]
sourcetype = Linux:ListeningPorts
TRANSFORMS-force_source_for_linux_listeningports = force_source_for_linux_listeningports

[source::...sample.openPortsEnhanced.unix]
sourcetype = Unix:ListeningPorts
TRANSFORMS-force_source_for_unix_listeningports = force_source_for_unix_listeningports

## wildcarding works here because WMI:ListeningPorts is a scripted input, not a wmi call
[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris|Unix):ListeningPorts]
SHOULD_LINEMERGE=false
FIELDALIAS-dest_ip_for_nix_listeningports = src_ip as dest_ip
FIELDALIAS-dest_port_for_nix_listeningports = src_port as dest_port
FIELDALIAS-process_for_nix_listeningports = app as process
FIELDALIAS-process_id_for_nix_listeningports = pid as process_id

###### Local Processes ######
[source::...(linux.localprocesses|sample.localprocesses.linux)]
sourcetype = Linux:LocalProcesses
TRANSFORMS-force_source_for_linux_localprocesses = force_source_for_linux_localprocesses

[source::...sample.localprocesses.unix]
sourcetype = Unix:LocalProcesses
TRANSFORMS-force_source_for_unix_localprocesses = force_source_for_unix_localprocesses

[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris):LocalProcesses]
SHOULD_LINEMERGE = false
FIELDALIAS-cpu_load_percent_for_nix_localprocesses = PercentProcessorTime as cpu_load_percent
FIELDALIAS-mem_used_for_nix_localprocesses = UsedBytes as mem_used
FIELDALIAS-process_for_nix_localprocesses = app as process
FIELDALIAS-process_id_for_nix_localprocesses = pid as process_id

###### Memory ######
[source::...(linux.memory|sample.memory.linux)]
sourcetype = Linux:Memory
TRANSFORMS-force_source_for_linux_memory = force_source_for_linux_memory

[source::...(osx.memory|sample.memory.osx)]
sourcetype = OSX:Memory
TRANSFORMS-force_source_for_osx_memory = force_source_for_osx_memory

[source::...(solaris.memory|sample.memory.solaris)]
sourcetype = Solaris:Memory
TRANSFORMS-force_source_for_solaris_memory = force_source_for_solaris_memory

[source::...sample.memory.unix]
sourcetype = Unix:Memory
TRANSFORMS-force_source_for_unix_memory = force_source_for_unix_memory

[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris):Memory]
SHOULD_LINEMERGE = false

EVAL-mem = if(isnotnull(TotalMBytes),TotalMBytes*1048576,null())
EVAL-mem_free = if(isnotnull(AvailableMBytes),AvailableMBytes*1048576,null())
FIELDALIAS-mem_used = UsedBytes as mem_used

## Legacy Fields
FIELDALIAS-FreeMBytes_for_memory = AvailableMBytes as FreeMBytes

###### SELinux Config ######
[source::...(linux.selinuxconfig|sample.selinuxconfig.linux|sample.selinuxChecker.linux)]
sourcetype = Linux:SELinuxConfig
TRANSFORMS-force_source_for_linux_selinuxconfig = force_source_for_linux_selinuxconfig

## support for linux only
[Linux:SELinuxConfig]
EVAL-note = "SELinux is a Linux feature that provides a variety of security policies, including U.S. Department of Defense style mandatory access controls, through the use of Linux Security Modules"

###### Service ######
[source::...(linux.service|sample.service.linux)]
sourcetype = Linux:Service
TRANSFORMS-force_source_for_linux_service = force_source_for_linux_service

[source::...(osx.service|sample.service.osx)]
sourcetype = OSX:Service
TRANSFORMS-force_source_for_osx_service = force_source_for_osx_service

[source::...(solaris.service|sample.service.solaris)]
sourcetype = Solaris:Service
TRANSFORMS-force_source_for_solaris_service = force_source_for_solaris_service

[source::...sample.service.unix]
sourcetype = Unix:Service
TRANSFORMS-force_source_for_unix_service = force_source_for_unix_service

[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris|Unix):Service]
SHOULD_LINEMERGE = false
FIELDALIAS-service_for_linux_service = app as service

[source::...(Linux|Unix):Service]
LOOKUP-StartMode_for_linux_service = linux_service_startmode_lookup runlevel0,runlevel1,runlevel2,runlevel3,runlevel4,runlevel5,runlevel6 OUTPUTNEW StartMode
EVAL-note = if(match(_raw,"runlevel[06]\=on"),"Runlevels 0 and 6 are reserved for halt and reboot respectively",null())
EVAL-start_mode=case(isnotnull(StartMode),StartMode,match(_raw,"runlevel\d+\=on"),"Auto",1=1,"Disabled")

[source::...(Solaris|OSX):Service]
FIELDALIAS-start_mode_for_solaris_service = StartMode as start_mode
FIELDALIAS-status_for_solaris_service = State as status

###### SSH Config ######
[source::...(linux.sshdconfig|sample.sshdconfig.linux|sample.sshdChecker.linux)]
sourcetype = Linux:SSHDConfig
TRANSFORMS-force_source_for_linux_sshdconfig = force_source_for_linux_sshdconfig

[source::...(osx.sshdconfig|sample.sshdconfig.osx)]
sourcetype = OSX:SSHDConfig
TRANSFORMS-force_source_for_osx_sshdconfig = force_source_for_osx_sshdconfig

[source::...sample.sshdChecker.unix]
sourcetype = Unix:SSHDConfig
TRANSFORMS-force_source_for_unix_sshdconfig = force_source_for_unix_sshdconfig

## no windows application at this time
[source::*:SSHDConfig]
EVAL-note = if(match(sshd_protocol,"1"),"SSH-1 has inherent design flaws which make it vulnerable (e.g., man-in-the-middle attacks)",null())

###### Update ######
[source::...(linux.update|sample.update.linux)]
sourcetype = Linux:Update
TRANSFORMS-force_source_for_linux_update = force_source_for_linux_update

[source::...(osx.update|sample.update.osx)]
sourcetype = OSX:Update
TRANSFORMS-force_source_for_osx_update = force_source_for_osx_update

[source::...sample.update.osx]
sourcetype = Unix:Update
TRANSFORMS-force_source_for_unix_update = force_source_for_unix_update

[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris|Unix):Update]
FIELDALIAS-signature_for_update = package as signature
LOOKUP-status_for_update = da_update_status_lookup sourcetype OUTPUTNEW status

###### Uptime ######
[source::...(linux.uptime|sample.uptime.linux)]
sourcetype = Linux:Uptime
TRANSFORMS-force_source_for_linux_uptime = force_source_for_linux_uptime

[source::...sample.uptime.unix]
sourcetype = Unix:Uptime
TRANSFORMS-force_source_for_unix_uptime = force_source_for_unix_uptime

[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris|Unix):Uptime]
FIELDALIAS-uptime_for_unix_uptime = SystemUpTime as uptime

###### UserAccounts ######
[source::...(linux.useraccounts|sample.useraccounts.linux)]
sourcetype = Linux:UserAccounts
TRANSFORMS-force_source_for_linux_useraccounts = force_source_for_linux_useraccounts

[source::...sample.passwd.unix]
sourcetype = Unix:UserAccounts
TRANSFORMS-force_source_for_unix_useraccounts = force_source_for_unix_useraccounts

###### Version ######
[source::...(linux.version|sample.version.linux)]
sourcetype = Linux:Version
TRANSFORMS-force_source_for_linux_version = force_source_for_linux_version

[source::...(osx.version|sample.version.osx)]
sourcetype = OSX:Version
TRANSFORMS-force_source_for_osx_version = force_source_for_osx_version

[source::...(solaris.version|sample.version.solaris)]
sourcetype = Solaris:Version
TRANSFORMS-force_source_for_solaris_version = force_source_for_solaris_version

[source::...sample.version.unix]
sourcetype = Unix:Version
TRANSFORMS-force_source_for_unix_version = force_source_for_unix_version

[source::...(AIX|FreeBSD|HPUX|Linux|OSX|Solaris|Unix):Version]
FIELDALIAS-family_for_nix_version = os_name as family
LOOKUP-range_for_nix_version = da_version_range_lookup sourcetype OUTPUTNEW range
FIELDALIAS-version_for_nix_version = os_release as version

EVAL-os = if(isnotnull(os_name) AND isnotnull(os_release),os_name." ".os_release,null())

###### VSFTPD Config ######
## no windows application at this time
[source::...sample.vsftpdChecker.linux]
sourcetype = Unix:VSFTPDConfig
TRANSFORMS-force_source_for_linux_vsftpdchecker = force_source_for_linux_vsftpdchecker

[source::*:VSFTPDConfig]
EVAL-note = "FTP uses clear text to pass authentication credentials.  Consider using SSH instead."

#####################
## END SCRIPTED INPUT CONTENT IMPORTED FROM TA-deployment-apps
#####################


#####################
## System Logs
#####################

###### Global ######
[source::....nix]
sourcetype = linux_secure

[source::/etc/passwd*]
sourcetype = ignored_type

[source::/etc/shadow*]
sourcetype = ignored_type

## Custom Sourcetype
#[source::....<your_sourcetype>]
#sourcetype = <your_sourcetype>

#[<your_sourcetype>]
### Event extractions by type
#REPORT-0authentication_for_your_sourcetype = ssh-login-events, ssh-session-close, ssh-disconnect, sshd_authentication_kerberos_success, sshd_authentication_refused, sshd_authentication_tried, sshd_login_restricted, pam_unix_authentication_success, pam_unix_authentication_failure, sudo_cannot_identify, ksu_authentication, ksu_authorization, su_simple, su_authentication, su_successful, wksh_authentication, login_authentication
#EVAL-action = if(app="su" AND isnull(action),"success",action)
#REPORT-account_management_for_your_sourcetype = useradd, userdel
#REPORT-firewall_for_your_sourcetype = ipfw, ipfw-stealth, ipfw-icmp, pf
#REPORT-routing_for_your_sourcetype = iptables
#EVAL-signature = if(isnotnull(inbound_interface),"firewall",null())
#REPORT-signature_for_your_sourcetype_timesync = signature_for_nix_timesync

#REPORT-dest_for_your_sourcetype = host_as_dest
#LOOKUP-action_for_your_sourcetype = nix_action_lookup vendor_action OUTPUTNEW action
#REPORT-pid-process_for_your_sourcetype = syslog-extractions
#REPORT-src_for_your_sourcetype = src_dns_as_src, src_ip_as_src, host_as_src

###### AIX Sourcetype ######
[source::....aix_secure]
sourcetype = aix_secure

[aix_secure]
REPORT-0authentication_for_aix_secure = ssh-login-events, ssh-session-close, ssh-disconnect, sshd_authentication_kerberos_success, sshd_authentication_refused, sshd_authentication_tried, sshd_login_restricted, pam_unix_authentication_success, pam_unix_authentication_failure, sudo_cannot_identify, ksu_authentication, ksu_authorization, su_simple, su_authentication, su_successful, wksh_authentication, login_authentication
EVAL-action = if(app="su" AND isnull(action),"success",action)
REPORT-signature_for_aix_secure_timesync = signature_for_nix_timesync

REPORT-dest_for_aix_secure = host_as_dest
LOOKUP-action_for_osx_secure = nix_action_lookup vendor_action OUTPUTNEW action
REPORT-src_for_aix_secure = src_dns_as_src, src_ip_as_src, host_as_src

###### OSX Security ######
[source::....osx_secure]
sourcetype = osx_secure

[osx_secure]
## Event extractions by type
REPORT-0authentication_for_osx_secure = ssh-login-events, ssh-session-close, ssh-disconnect, sshd_authentication_kerberos_success, sshd_authentication_refused, sshd_authentication_tried, sshd_login_restricted, pam_unix_authentication_success, pam_unix_authentication_failure, sudo_cannot_identify, ksu_authentication, ksu_authorization, su_simple, su_authentication, su_successful, wksh_authentication, login_authentication
EVAL-action = if(app="su" AND isnull(action),"success",action)
REPORT-account_management_for_osx_secure = useradd, userdel
REPORT-firewall_for_osx_secure = ipfw, ipfw-stealth, ipfw-icmp, pf
REPORT-routing_for_osx_secure = iptables
EVAL-signature = if(isnotnull(inbound_interface),"firewall",null())
REPORT-signature_for_osx_secure_timesync = signature_for_nix_timesync

REPORT-dest_for_osx_secure = host_as_dest
LOOKUP-action_for_osx_secure = nix_action_lookup vendor_action OUTPUTNEW action
REPORT-pid-process_for_osx_secure = syslog-extractions
REPORT-src_for_osx_secure = src_dns_as_src, src_ip_as_src, host_as_src

###### Linux Security ######
[source::....linux_secure]
sourcetype = linux_secure

[linux_secure]
## Event extractions by type
REPORT-0authentication_for_linux_secure = ssh-login-events, ssh-session-close, ssh-disconnect, sshd_authentication_kerberos_success, sshd_authentication_refused, sshd_authentication_tried, sshd_login_restricted, pam_unix_authentication_success, pam_unix_authentication_failure, sudo_cannot_identify, ksu_authentication, ksu_authorization, su_simple, su_authentication, su_successful, wksh_authentication, login_authentication, ftpd_authentication
EVAL-action = if(app="su" AND isnull(action),"success",action)
REPORT-account_management_for_linux_secure = useradd, userdel
REPORT-firewall = ipfw, ipfw-stealth, ipfw-icmp, pf
REPORT-routing = iptables
EVAL-signature = if(isnotnull(inbound_interface),"firewall",null())
REPORT-signature_for_linux_secure_timesync = signature_for_nix_timesync

REPORT-dest_for_linux_secure = host_as_dest
LOOKUP-action_for_linux_secure = nix_action_lookup vendor_action OUTPUTNEW action
REPORT-pid-process_for_linux_secure = syslog-extractions
REPORT-src_for_linux_secure = src_dns_as_src, src_ip_as_src, host_as_src

###### Syslog ######
[source::....syslog]
sourcetype = syslog

[syslog]
## Event extractions by type
REPORT-0authentication_for_syslog = ssh-login-events, ssh-session-close, ssh-disconnect, sshd_authentication_kerberos_success, sshd_authentication_refused, sshd_authentication_tried, sshd_login_restricted, pam_unix_authentication_success, pam_unix_authentication_failure, sudo_cannot_identify, ksu_authentication, ksu_authorization, su_simple, su_authentication, su_successful, wksh_authentication, login_authentication
EVAL-action = if(app="su" AND isnull(action),"success",action)
REPORT-account_management_for_syslog = useradd, userdel
REPORT-firewall = ipfw, ipfw-stealth, ipfw-icmp, pf
REPORT-routing = iptables
EVAL-signature = if(isnotnull(inbound_interface),"firewall",null())
REPORT-signature_for_syslog_timesync = signature_for_nix_timesync

REPORT-dest_for_syslog = host_as_dest
LOOKUP-action_for_syslog = nix_action_lookup vendor_action OUTPUTNEW action
REPORT-src_for_syslog = src_dns_as_src, src_ip_as_src, host_as_src

###### bash history ######
[bash_history]
SHOULD_LINEMERGE=FALSE
DATETIME_CONFIG=CURRENT
REPORT-bhist=bash_user,bash_user_root
FIELDALIAS-bhist=_raw AS bash_command
